@charset "utf-8";
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
#fvAnimation{
  //background-color: $key-black;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  @include transition(.8s);
  @include transition-delay($objOut);
  .loaded &{
    background-color: transparent;
  }
  >.inner{
    width: 100%;
    margin: 0 auto;
    height: 75vh;
    @include opacity(0);
    @include transition(2s);
    position: relative;
    overflow: hidden;
    .loaded &{
      @include opacity(1);
    }
  }
  .fvContent{
    @include setTbl;
    height: 100%;
    >.inner{
      >.sec{
        position: relative;
      }
    }
  }
  span{
    display: block;
  }
  img{
    @include imgset;
  }
}
@media screen and (min-width: $break-point-middle) {
#fvAnimation{
  >.inner{
    max-width: 1307px;
    width: 100%;
    height: 100vh;
  }
}
}
//////////////////////////////////////
.f1{
  @include transition(.8s);
  @include opacity(.3);
  @include transition-delay($bgOut);
  .loaded &{
    @include opacity(0);
  }
}
//////////////////////////////////////
.f2{
  >span{
    position: absolute;
    width: 195/1084*100vw;
  }
  svg{
    width: 100%;
    height: 100%;
  }
  .st0{
    fill:$white;
    stroke:$white;
    fill-opacity: 0;
    stroke-width:1;
    stroke-dasharray: 3000;
    stroke-dashoffset:3000;
  }
}
.fv-obj_01{
  top: 0/750*100vw;;
  left: 0/750*100vw;
  @include animation(objOut1 1s ease-out $objOut forwards);
  .st0{
    @include animation(LINE 3s ease-in $objIn1 forwards);
  }
}
.fv-obj_02{
  top: 315/750*100vw;;
  right: 5/750*100vw;
  @include animation(objOut2 1s ease-out $objOut forwards);
  .st0{
    @include animation(LINE 3s ease-in $objIn2 forwards);
  }
}
.fv-obj_03{
  bottom: -5/750*100vw;
  left: 5/750*100vw;
  @include animation(objOut3 1s ease-out $objOut forwards);
  .st0{
    @include animation(LINE 3s ease-in $objIn3 forwards);
  }
}
.fv-obj_04{
  bottom: 295/750*100vw;
  right: 0;
  @include animation(objOut4 1s ease-out $objOut forwards);
  .st0{
    @include animation(LINE 3s ease-in $objIn4 forwards);
  }
}
@media screen and (min-width: $break-point-middle) {
.f2{
  >span{
    width: 96/1307*100%;
  }
}
.fv-obj_01{
  top: 39/685*100%;
  left: 83/1307*100%;
}
.fv-obj_02{
  top: 74/685*100%;
  right: 124/1307*100%;
}
.fv-obj_03{
  bottom: 69/685*100%;
  left: 125/1307*100%;
}
.fv-obj_04{
  bottom: 28/685*100%;
  right: 79/1307*100%;
}
}
//////////////////////////////////////
.f3{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  text-align: center;
  svg{
    display: inline-block;
    fill:$white;
  }
  span{
    display: block;
    //@include transition(.8s);
    @include opacity(0);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
  }
  span:nth-child(1){
    @include animation(alphaIn .5s ease-in $txIn1 forwards,alphaOut .5s ease-in $txOut1 forwards);
    svg{
      width: 285/750*100vw;
      height: 26/750*100vw;
    }
  }
  span:nth-child(2){
    @include animation(alphaIn .5s ease-in $txIn2 forwards,alphaOut .5s ease-in $txOut2 forwards);
    svg{
      width: 323/750*100vw;
      height: 26/750*100vw;
    }
  }
  span:nth-child(3){
    @include animation(alphaIn .5s ease-in $txIn3 forwards,alphaOut .5s ease-out $objOut forwards);
    svg{
      width: 331/750*100vw;
      height: 26/750*100vw;
    }
  }
  span:nth-child(4){
    @include animation(alphaIn .5s ease-in $txIn4 forwards);
    h1>svg{
      width: 331/750*100vw;
      height: 26/750*100vw;
    }
  }
  h1{
    .logo{
      position: relative;
      top:-40/750*100vw;
    }
    .logo svg{
      fill:$white;
      stroke:$white;
      fill-opacity: 0;
      stroke-width:.1;
      stroke-dasharray: 3000;
      stroke-dashoffset:3000;
      width: 469/750*100vw;
      height: 118/750*100vw;
      @include animation(LINE 5s ease-in 11s forwards);
    }
  }
}
@media screen and (min-width: $break-point-middle) {
.f3{
  top: -120px;
  span:nth-child(1){
    svg{
      width: 212/1307*100%;
      height: 20/685*100%;
    }
  }
  span:nth-child(2){
    svg{
      width: 240/1307*100%;
      height: 20/685*100%;
    }
  }
  span:nth-child(3){
    @include animation(alphaIn .5s ease-in $txIn3 forwards,alphaOut .5s ease-out $objOut forwards);
    svg{
      width: 254/1307*100%;
      height: 20/685*100%;
    }
  }
  span:nth-child(4){
    h1>svg{
      width: 254/1307*100%;
      height: 20/685*100%;
    }
  }
  h1{
    .logo{
      top: 20px;
    }
    .logo svg{
      width: 380/1307*100%;
      height: 96/685*100%;
    }
  }
}
}
//////////////////////////////////////
@include keyframes(LINE){
	0%{stroke-dashoffset:3000;fill-opacity: 0;}
	30% {fill-opacity: 0;}
	60% {fill-opacity: 1;}
	100%{stroke-dashoffset:0;fill-opacity: 1;}
}
//////////////////////////////////////
@include keyframes(alphaIn){
	0%{@include opacity(0);}
	100%{@include opacity(1);}
}
//////////////////////////////////////
@include keyframes(alphaOut){
	0%{@include opacity(1);}
	100%{@include opacity(0);}
}
//////////////////////////////////////
@include keyframes(moveOut){
	0%{top: 0;}
	100%{top: -100px;}
}
//////////////////////////////////////
@include keyframes(moveOutSp){
	0%{top: 0;}
	100%{top: -100/750*100vw;}
}
//////////////////////////////////////
@include keyframes(objOut1){
	100%{
    top: 50%;
    left: 50%;
    @include opacity(0);
    @include transform(rotate(720deg) scale(0));
  }
}
//////////////////////////////////////
@include keyframes(objOut2){
	100%{
    top: 50%;
    right: 50%;
    @include opacity(0);
    @include transform(rotate(720deg) scale(0));
  }
}
//////////////////////////////////////
@include keyframes(objOut3){
	100%{
    bottom: 50%;
    left: 50%;
    @include opacity(0);
    @include transform(rotate(720deg) scale(0));
  }
}
//////////////////////////////////////
@include keyframes(objOut4){
	100%{
    bottom: 50%;
    right: 50%;
    @include opacity(0);
    @include transform(rotate(720deg) scale(0));
  }
}
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
@media screen and (min-width: $break-point-middle) {
}
